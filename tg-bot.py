import telebot, types
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo
import requests
import json
import time
import types

# –£–∫–∞–∂–∏—Ç–µ —Ç–æ–∫–µ–Ω –∏ —Å—Å—ã–ª–∫–∏
token = '7866617284:AAHDOfPQJdKmufOdRgFza6XA8ZWRHPeA_Yc'
signUpUrl = 'https://sergeymorykov-tg-web-app-react-72ec.twc1.net/signup'
eventsUrl = 'https://sergeymorykov-tg-web-app-react-72ec.twc1.net/events'
profilesUrl = 'https://sergeymorykov-tg-web-app-react-72ec.twc1.net/user-list'
# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
bot = telebot.TeleBot(token)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
def check_users_presence(chat_id):
    presence = False
    # –ó–¥–µ—Å—å –¥–æ–±–∞–≤—å—Ç–µ —Å–≤–æ—é –ª–æ–≥–∏–∫—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    return presence

@bot.message_handler(content_types=['web_app_data'])
def handle_web_app_data(message):
    data = message.web_app_data.data  # This is the JSON string sent from the web app
    print(f"Data: {data}")
"""
@bot.message_handler(commands=['start'])
def handle_start(message):
    web_app_url = signUpUrl  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ URL –≤–∞—à–µ–≥–æ Web App
    web_app = types.WebAppInfo(url=web_app_url)

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É —Å —Ç–∏–ø–æ–º web_app –∏ –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∫ –Ω–µ–π Web App URL
    keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    web_app_button = types.KeyboardButton(text="Open Web App", web_app=web_app)
    keyboard.add(web_app_button)

    bot.send_message(message.chat.id, "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è Web App:", reply_markup=keyboard)
"""

@bot.message_handler(commands=['start'])
def handle_start(message):
    chat_id = message.chat.id

    # URL –≤–∞—à–µ–≥–æ API
    url = 'http://localhost:5000/last_chat_id'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –∞–¥—Ä–µ—Å

    # –î–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å
    data = {
        'last_id': str(chat_id)  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à–µ –∏–º—è –ø–æ–ª—è –∏ –∑–Ω–∞—á–µ–Ω–∏–µ
    }

    # –û—Ç–ø—Ä–∞–≤–∫–∞ POST-–∑–∞–ø—Ä–æ—Å–∞ —Å JSON
    response = requests.post(url, json=data)

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
    markup = InlineKeyboardMarkup()
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    markup.add(InlineKeyboardButton("üìù Sign up", web_app=WebAppInfo(url=signUpUrl)))
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–æ–±—ã—Ç–∏–π
    markup.add(InlineKeyboardButton("üìÖ View Events", web_app=WebAppInfo(url=eventsUrl)))
    markup.add(InlineKeyboardButton("üìÖ View list profile", web_app=WebAppInfo(url=profilesUrl)))
    bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –∏–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Å–æ–±—ã—Ç–∏—è", reply_markup=markup)

    if message.web_app_data and message.web_app_data.data:
        try:
            data = json.loads(message.web_app_data.data)
            print(f"Data: {data}")
            bot.send_message(chat_id, '–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å')
            bot.send_message(chat_id, '–í–∞—àe –ò–º—è: ' + data.get('country', '–ù–µ —É–∫–∞–∑–∞–Ω–∞'))
            bot.send_message(chat_id, '–§–∞–º–∏–ª–∏—è: ' + data.get('street', '–ù–µ —É–∫–∞–∑–∞–Ω–∞'))

            time.sleep(3)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Å–æ–æ–±—â–µ–Ω–∏—è
            bot.send_message(chat_id, '–í—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –≤ —ç—Ç–æ–º —á–∞—Ç–µ')
        except json.JSONDecodeError as e:
            print(f"–û—à–∏–±–∫–∞ —Ä–∞–∑–±–æ—Ä–∞ JSON: {e}")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling()